name: SwiftWasm
on:
  push:
    branches: ["wasm32-wasi-test"]
  pull_request:
    branches: ["wasm32-wasi-test"]
permissions: {}
defaults:
  run:
    shell: bash -euo pipefail {0}
jobs:
  test:
    strategy:
      matrix:
        target:
          - sdk:
              url: https://download.swift.org/development/wasm-sdk/swift-DEVELOPMENT-SNAPSHOT-2025-10-17-a/swift-DEVELOPMENT-SNAPSHOT-2025-10-17-a_wasm.artifactbundle.tar.gz
              checksum: 5375328f7bcb41d10acee8a57cc45636e50e444df1407de70784a12e6bb51dd2
              id: swift-DEVELOPMENT-SNAPSHOT-2025-10-17-a_wasm
            other-wasmkit-flags:
    runs-on: ubuntu-24.04-arm
    env:
      STACK_SIZE: 16777216
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
      - run: ./Scripts/ci-install-swiftly.sh
      - run: swiftly install -y --use main-snapshot-2025-10-17
      - run: swift --version
      - env:
          SDK_URL: ${{ matrix.target.sdk.url }}
          SDK_CHECKSUM: ${{ matrix.target.sdk.checksum }}
        run: swift sdk install "$SDK_URL" --checksum "$SDK_CHECKSUM"
      - env:
          SDK_ID: ${{ matrix.target.sdk.id }}
        run: swift build -c release --build-tests --swift-sdk "$SDK_ID" -Xlinker -z -Xlinker stack-size="$STACK_SIZE"
      - env:
          WASMKIT_FLAGS: ${{ matrix.target.other-wasmkit-flags }}
        run: wasmkit run --dir .build --dir / --stack-size="$STACK_SIZE" $WASMKIT_FLAGS .build/release/swift-syntaxPackageTests.xctest
  results:
    if: ${{ always() }}
    runs-on: ubuntu-24.04-arm
    needs: [test]
    steps:
      - run: exit 1
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
